"""inital tables

Revision ID: 5761b1b475c3
Revises: 
Create Date: 2025-05-03 17:57:04.703257

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '5761b1b475c3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userroleenum'), nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('jobapplication',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('status', sa.Enum('APPLIED', 'OA', 'INTERVIEW', 'REJECTED', 'OFFER', 'WISHLIST', 'OTHER',
                                                name='jobstatusenum'), nullable=False),
                    sa.Column('applied_date', sa.DateTime(), nullable=False),
                    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('resume_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('job_description_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('resumematch',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('job_id', sa.Uuid(), nullable=False),
                    sa.Column('score', sa.Float(), nullable=False),
                    sa.Column('suggestion_keywords', sa.JSON(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['job_id'], ['jobapplication.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resumematch')
    op.drop_table('jobapplication')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
